package com.example.demo.controller;

import com.example.demo.model.Review;
import com.example.demo.service.ReviewService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/company")
public class ReviewController {

    @Autowired
    private ReviewService reviewService;

    @GetMapping("/{companyid}/reviews")
    public List<Review> getReviewsByCompanyId(@PathVariable String companyid) {
        return reviewService.getReviewsByCompanyId(companyid);
    }
    
    @PostMapping("/{companyid}/review")
    public ResponseEntity<Review> submitReview(@PathVariable String companyid, @RequestBody Review review) {
        review.setCompanyid(companyid);
        Review createdReview = reviewService.addReview(review);
        return ResponseEntity.ok(createdReview);
    }

    @GetMapping("/review/{reviewid}")
    public ResponseEntity<Review> getReviewById(@PathVariable String reviewid) {
        Review review = reviewService.getReviewById(reviewid);
        return review != null ? ResponseEntity.ok(review) : ResponseEntity.notFound().build();
    }

    @PutMapping("/review/{reviewid}")
    public ResponseEntity<Review> updateReview(@PathVariable String reviewid, @RequestBody Review review) {
        Review updatedReview = reviewService.updateReview(reviewid, review);
        return updatedReview != null ? ResponseEntity.ok(updatedReview) : ResponseEntity.notFound().build();
    }

    @DeleteMapping("/review/{reviewid}")
    public ResponseEntity<Void> deleteReview(@PathVariable String reviewid) {
        boolean isDeleted = reviewService.deleteReview(reviewid);
        return isDeleted ? ResponseEntity.noContent().build() : ResponseEntity.notFound().build();
    }
}
